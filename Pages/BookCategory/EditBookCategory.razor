@page "/editBookCategory/{Id}"
@using Models
@using BooksStore.Service
@inject BookCategoryService BookCategoryService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>修改图书分类</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="bookCategory" OnValidSubmit="HandleValidSubmit" class="">
            <DataAnnotationsValidator />
            <ValidationSummary />
          @*  <InputNumber type="hidden" @bind-Value="bookCategory.Id"/>*@
            <div class="form-group row">
                <label class="col-sm-2 col-form-label text-right">类型名称：</label>
                <div class="col-sm-9">
                    <InputText @bind-Value="bookCategory.Name" placeholder="请输入类型名称" class="form-control " />
                </div>

            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label text-right">
                    类型说明：
                </label>
                <div class="col-sm-9">
                    <InputTextArea @bind-Value="bookCategory.Remark" placeholder="请输入类型说明" class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label text-right">
                    排序：
                </label>
                <div class="col-sm-9">
                    <InputNumber @bind-Value="bookCategory.Sort" class="form-control" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label text-right">
                    是否热门：
                </label>
                <div class="col-sm-9">
                    <InputCheckbox @bind-Value="bookCategory.IsHot" />
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-2 col-form-label text-right">
                    是否可用：
                </label>
                <div class="col-sm-9">
                    <InputCheckbox @bind-Value="bookCategory.Enabled" />
                </div>

            </div>
            <div class="form-group" disabled="@formInvalid">
                <input type="submit" value="修改" class="btn btn-primary" />
                <a class="btn btn-info" href="bookCategory">返回列表</a>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private BookCategory bookCategory = new BookCategory();


    private bool formInvalid = true;
    private EditContext editContext;
   [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
       bookCategory =await BookCategoryService.OnGetModelAsync(Id);

        editContext = new EditContext(bookCategory);
        editContext.OnFieldChanged += HandleFieldChanged;
    }

    private void HandleFieldChanged(object sender, FieldChangedEventArgs e)
    {
        formInvalid = !editContext.Validate();
        StateHasChanged();
    }

    public void Dispose()
    {
        editContext.OnFieldChanged -= HandleFieldChanged;
    }
    private async Task HandleValidSubmit()
    {
        var result = await BookCategoryService.Edit(bookCategory);

        if (result > 0)
        {
            NavigationManager.NavigateTo("bookCategory");
        }
        else
        {
            await JSRuntime.InvokeAsync<bool>(
               "exampleJsFunctions.showMessage",
               "保存失败");
        }
    }

}
